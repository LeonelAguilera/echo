-- VHDL Entity echo_lib.address_calculator.interface
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-112.ad.liu.se)
--          at - 00:16:35 10/19/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
USE IEEE.MATH_REAL.ALL;

ENTITY address_calculator IS
   GENERIC( 
      min_x : UNSIGNED(10 DOWNTO 0);
      max_x : UNSIGNED(10 DOWNTO 0);
      min_y : UNSIGNED(9 DOWNTO 0);
      max_y : UNSIGNED(9 DOWNTO 0)
   );
   PORT( 
      c0               : IN     std_logic;
      h_count          : IN     unsigned (10 DOWNTO 0);
      v_count          : IN     unsigned (9 DOWNTO 0);
      finished_drawing : OUT    std_logic;
      read_address     : OUT    std_logic_vector (18 DOWNTO 0)
   );

-- Declarations

END address_calculator ;

--
-- VHDL Architecture echo_lib.address_calculator.struct
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-112.ad.liu.se)
--          at - 00:12:35 10/19/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
USE IEEE.MATH_REAL.ALL;

LIBRARY echo_lib;

ARCHITECTURE struct OF address_calculator IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL dout                     : unsigned(10 DOWNTO 0);
   SIGNAL dout1                    : unsigned(10 DOWNTO 0);
   SIGNAL dout4                    : unsigned(9 DOWNTO 0);
   SIGNAL dout7                    : unsigned(9 DOWNTO 0);
   SIGNAL fout                     : std_logic;
   SIGNAL fout2                    : std_logic;
   SIGNAL horizontal_limit_reached : std_logic;
   SIGNAL in_image_window          : std_logic;
   SIGNAL q                        : std_logic;
   SIGNAL q1                       : std_logic;
   SIGNAL vertical_limit_reached   : std_logic;

   -- Implicit buffer signal declarations
   SIGNAL finished_drawing_internal : std_logic;


   -- ModuleWare signal declarations(v1.12) for instance 'U_8' of 'rsff'
   SIGNAL mw_U_8reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.12) for instance 'U_11' of 'rsff'
   SIGNAL mw_U_11reg_cval : std_logic;

   -- Component Declarations
   COMPONENT basic_counter
   PORT (
      c0               : IN     std_logic ;
      finished_drawing : IN     std_logic ;
      in_image_window  : IN     std_logic ;
      read_address     : OUT    std_logic_vector (18 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : basic_counter USE ENTITY echo_lib.basic_counter;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_22' of 'and'
   finished_drawing_internal <= horizontal_limit_reached
                                AND vertical_limit_reached;

   -- ModuleWare code(v1.12) for instance 'U_25' of 'and'
   in_image_window <= q AND q1;

   -- ModuleWare code(v1.12) for instance 'U_6' of 'comp'
   u_6combo_proc : PROCESS (h_count, dout)
   VARIABLE temp_lout : std_logic;
   
   BEGIN
   temp_lout := '0';
      IF (h_count = dout) THEN
         temp_lout := '1';
      END IF;
   fout <= temp_lout;
   END PROCESS u_6combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_7' of 'comp'
   u_7combo_proc : PROCESS (h_count, dout1)
   VARIABLE temp_lout : std_logic;
   
   BEGIN
   temp_lout := '0';
      IF (h_count = dout1) THEN
         temp_lout := '1';
      END IF;
   horizontal_limit_reached <= temp_lout;
   END PROCESS u_7combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_13' of 'comp'
   u_13combo_proc : PROCESS (v_count, dout4)
   VARIABLE temp_lout : std_logic;
   
   BEGIN
   temp_lout := '0';
      IF (v_count = dout4) THEN
         temp_lout := '1';
      END IF;
   vertical_limit_reached <= temp_lout;
   END PROCESS u_13combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_17' of 'comp'
   u_17combo_proc : PROCESS (v_count, dout7)
   VARIABLE temp_lout : std_logic;
   
   BEGIN
   temp_lout := '0';
      IF (v_count = dout7) THEN
         temp_lout := '1';
      END IF;
   fout2 <= temp_lout;
   END PROCESS u_17combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_9' of 'constval'
   dout <= min_x;

   -- ModuleWare code(v1.12) for instance 'U_10' of 'constval'
   dout1 <= max_x;

   -- ModuleWare code(v1.12) for instance 'U_14' of 'constval'
   dout4 <= max_y;

   -- ModuleWare code(v1.12) for instance 'U_18' of 'constval'
   dout7 <= min_y;

   -- ModuleWare code(v1.12) for instance 'U_8' of 'rsff'
   u_8seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         IF (vertical_limit_reached = '1') THEN
            mw_U_8reg_cval <= '0';
         ELSIF (fout2 = '1') THEN
            mw_U_8reg_cval <= '1';
         END IF;
      END IF;
   END PROCESS u_8seq_proc;
   q1 <= mw_U_8reg_cval;

   -- ModuleWare code(v1.12) for instance 'U_11' of 'rsff'
   u_11seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         IF (horizontal_limit_reached = '1') THEN
            mw_U_11reg_cval <= '0';
         ELSIF (fout = '1') THEN
            mw_U_11reg_cval <= '1';
         END IF;
      END IF;
   END PROCESS u_11seq_proc;
   q <= mw_U_11reg_cval;

   -- Instance port mappings.
   U_24 : basic_counter
      PORT MAP (
         c0               => c0,
         finished_drawing => finished_drawing_internal,
         in_image_window  => in_image_window,
         read_address     => read_address
      );

   -- Implicit buffered output assignments
   finished_drawing <= finished_drawing_internal;

END struct;
