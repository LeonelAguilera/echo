-- VHDL Entity echo_lib.top.symbol
--
-- Created:
--          by - leoag319.student-liu.se (muxen1-112.ad.liu.se)
--          at - 16:19:50 09/22/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY top IS
-- Declarations

END top ;

--
-- VHDL Architecture echo_lib.top.struct
--
-- Created:
--          by - antmo328.student-liu.se (muxen2-111.ad.liu.se)
--          at - 15:41:48 10/02/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY echo_lib;

ARCHITECTURE struct OF top IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL AUDIO_IN  : std_ulogic_vector(15 DOWNTO 0);
   SIGNAL AUDIO_out : std_ulogic_vector(15 DOWNTO 0);
   SIGNAL CLK_50M   : std_logic;
   SIGNAL FSM_IN    : std_logic_vector(15 DOWNTO 0);
   SIGNAL FSM_OUT   : std_logic_vector(15 DOWNTO 0);
   SIGNAL KEY_SC    : std_logic;
   SIGNAL RESET_N   : std_logic;
   SIGNAL SC_KEY    : std_logic;
   SIGNAL SRAM_TO   : std_ulogic_vector(15 DOWNTO 0);
   SIGNAL SRMA_FROM : std_ulogic_vector(15 DOWNTO 0);


   -- Component Declarations
   COMPONENT audio_io
   END COMPONENT;
   COMPONENT echo
   PORT (
      AUDIO_IN  : IN     std_ulogic_vector (15 DOWNTO 0);
      CLK_50M   : IN     std_logic ;
      FSM_IN    : IN     std_logic_vector (15 DOWNTO 0);
      KEY_SC    : IN     std_logic ;
      RESET_N   : IN     std_logic ;
      SRMA_FROM : IN     std_ulogic_vector (15 DOWNTO 0);
      AUDIO_out : OUT    std_ulogic_vector (15 DOWNTO 0);
      FSM_OUT   : OUT    std_logic_vector (15 DOWNTO 0);
      SRAM_TO   : OUT    std_ulogic_vector (15 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT i2c
   END COMPONENT;
   COMPONENT kb_decoder
   END COMPONENT;
   COMPONENT vga
   END COMPONENT;
   COMPONENT vol_bal
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : audio_io USE ENTITY echo_lib.audio_io;
   FOR ALL : echo USE ENTITY echo_lib.echo;
   FOR ALL : i2c USE ENTITY echo_lib.i2c;
   FOR ALL : kb_decoder USE ENTITY echo_lib.kb_decoder;
   FOR ALL : vga USE ENTITY echo_lib.vga;
   FOR ALL : vol_bal USE ENTITY echo_lib.vol_bal;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_2 : audio_io;
   U_1 : echo
      PORT MAP (
         AUDIO_IN  => AUDIO_IN,
         CLK_50M   => CLK_50M,
         FSM_IN    => FSM_IN,
         KEY_SC    => KEY_SC,
         RESET_N   => RESET_N,
         SRMA_FROM => SRMA_FROM,
         AUDIO_out => AUDIO_out,
         FSM_OUT   => FSM_OUT,
         SRAM_TO   => SRAM_TO
      );
   U_5 : i2c;
   U_6 : kb_decoder;
   U_3 : vga;
   U_4 : vol_bal;

END struct;
