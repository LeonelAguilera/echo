-- VHDL Entity echo_lib.top.symbol
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-116.ad.liu.se)
--          at - 10:29:26 10/30/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY top IS
   GENERIC( 
      G_ADDR_WIDTH : natural := 20;      --2^20 x 16 = 2 MB
      G_DATA_WIDTH : natural := 16       --Audio 16-bit
   );
   PORT( 
      AUD_ADCDAT    : IN     std_logic;
      AUD_BCLK      : IN     std_logic;
      AUD_DACLRCK   : IN     std_logic;
      AUD_XCK       : IN     std_logic;
      fpga_clk      : IN     STD_LOGIC  := '0';
      fpga_reset_n  : IN     std_logic  := '0';
      kb_clk        : IN     std_logic;
      kb_data       : IN     std_logic;
      AUD_ADCLRCK   : OUT    std_logic;
      AUD_DACDAT    : OUT    std_logic;
      HEX6          : OUT    std_logic_vector (0 TO 6);
      HEX7          : OUT    std_logic_vector (0 TO 6);
      SCL           : OUT    std_logic;
      SDA           : OUT    std_logic;
      SRAM_ADDR     : OUT    std_logic_vector (G_ADDR_WIDTH-1 DOWNTO 0);
      SRAM_CE_N     : OUT    std_logic;
      SRAM_LB_N     : OUT    std_logic;
      SRAM_OE_N     : OUT    std_logic;
      SRAM_UB_N     : OUT    std_logic;
      SRAM_WE_N     : OUT    std_logic;
      audio_debug   : OUT    std_logic_vector (7 DOWNTO 0);
      reduced_clock : OUT    std_logic;
      reset_led     : OUT    std_logic;
      scan_code     : OUT    std_logic_vector (7 DOWNTO 0);
      vga_b         : OUT    std_logic_vector (7 DOWNTO 0);
      vga_blank_n   : OUT    std_logic;
      vga_clk       : OUT    std_logic;
      vga_g         : OUT    std_logic_vector (7 DOWNTO 0);
      vga_hsync_n   : OUT    std_logic;
      vga_r         : OUT    std_logic_vector (7 DOWNTO 0);
      vga_sync      : OUT    std_logic;
      vga_vsync_n   : OUT    std_logic;
      SRAM_DQ       : INOUT  std_logic_vector (G_DATA_WIDTH-1 DOWNTO 0)
   );

-- Declarations

END top ;

--
-- VHDL Architecture echo_lib.top.struct
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-116.ad.liu.se)
--          at - 11:03:24 10/30/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY echo_lib;

ARCHITECTURE struct OF top IS

   -- Architecture declarations
   type exemplar_string_array is array (natural range <>, natural range <>) of character;
   attribute pin_number : string;
   attribute array_pin_number : exemplar_string_array;
   
   -- VGA
   attribute pin_number of fpga_clk : signal is "Y2";
   attribute pin_number of fpga_reset_n: signal is "M23";
   attribute pin_number of vga_clk: signal is "A12";
   attribute pin_number of vga_sync: signal is "C10";
   attribute pin_number of vga_blank_n: signal is "F11";
   attribute pin_number of vga_hsync_n: signal is "G13";
   attribute pin_number of vga_vsync_n: signal is "C13";
   attribute array_pin_number of vga_r : signal is ("H10", "H8 ", "J12", "G10", "F12", "D10", "E11", "E12");
   attribute array_pin_number of vga_g : signal is ("C9 ", "F10", "B8 ", "C8 ", "H12", "F8 ", "G11", "G8 ");
   attribute array_pin_number of vga_b : signal is ("D12", "D11", "C12", "A11", "B11", "C11", "A10", "B10");
   
   -- Switches
   -- attribute array_pin_number of left_ear_volume_d : signal is ("AB28", "AC28", "AC27");
   -- attribute array_pin_number of right_ear_volume_d : signal is ("AD27", "AB27", "AC26");
   -- attribute array_pin_number of balance_d : signal is ("AD26", "AB26", "AC25");
   -- attribute array_pin_number of master_volume_d : signal is ("AB25", "AC24", "AB24");
   -- attribute array_pin_number of echo_intensity_d : signal is ("AB23", "AA24", "AA23");
   -- attribute array_pin_number of echo_duration_d : signal is ("AA22", "Y24 ", "Y23 ");
   
   -- SRAM
   attribute array_pin_number of SRAM_ADDR : signal is ("T8  ","AB8 ","AB9 ","AC11","AB11","AA4 ","AC3 ","AB4 ","AD3 ","AF2 ","T7  ","AF5 ","AC5 ","AB5 ", "AE6 ","AB6 ", "AC7 ", "AE7 ","AD7 ","AB7 ");
   attribute array_pin_number of SRAM_DQ : signal is ("AG3 ","AF3 ","AE4 ","AE3 ","AE1 ","AE2 ","AD2 ","AD1 ","AF7 ","AH6 ","AG6 ","AF6 ","AH4 ","AG4 ","AF4 ","AH3 ");
   attribute pin_number of SRAM_CE_N : signal is "AF8";
   attribute pin_number of SRAM_UB_N : signal is "AC4";
   attribute pin_number of SRAM_LB_N : signal is "AD4";
   attribute pin_number of SRAM_OE_N : signal is "AD5";
   attribute pin_number of SRAM_WE_N : signal is "AE8";
   
   -- Audio Codec
   attribute pin_number of AUD_ADCLRCK : signal is "C2";
   attribute pin_number of AUD_ADCDAT: signal is "D2";
   attribute pin_number of AUD_DACLRCK: signal is "E3";
   attribute pin_number of AUD_DACDAT: signal is "D1";
   attribute pin_number of AUD_XCK: signal is "E1";
   attribute pin_number of AUD_BCLK: signal is "F2";
   attribute pin_number of SCL: signal is "B7";
   attribute pin_number of SDA: signal is "A8";
   
   -- Keyboard
   attribute pin_number of kb_clk : signal is "G6";
   attribute pin_number of kb_data : signal is "H5";
   
   -- Seven egment Display
   attribute array_pin_number of hex6 : signal is ("AC17", "AA15", "AB15", "AB17", "AA16", "AB16", "AA17");
   attribute array_pin_number of hex7 : signal is ("AA14", "AG18", "AF17", "AH17", "AG17", "AE17", "AD17");
   
   attribute pin_number of reset_led : signal is "E21";
   attribute pin_number of reduced_clock : signal is "E22";
   
   
   attribute array_pin_number of scan_code : signal is ("G19", "F19", "E19", "F21", "F18", "E18", "J19", "H19");
   attribute array_pin_number of audio_debug : signal is ("J17", "G17", "J15", "H16", "J16", "H17", "F15", "G15");

   -- Internal signal declarations
   SIGNAL Enable             : std_logic;
   SIGNAL Left_Audio         : std_logic_vector(15 DOWNTO 0);
   SIGNAL Right_Audio        : std_logic_vector(15 DOWNTO 0);
   SIGNAL audio_out_L        : std_logic_vector(G_DATA_WIDTH-1 DOWNTO 0);
   SIGNAL audio_out_R        : std_logic_vector(G_DATA_WIDTH-1 DOWNTO 0);
   SIGNAL audio_out_valid    : std_logic;
   SIGNAL balance_d          : unsigned(7 DOWNTO 0);
   SIGNAL c0                 : STD_LOGIC;
   SIGNAL data_valid         : std_logic;
   SIGNAL delay_samples      : std_logic_vector(18 DOWNTO 0);
   SIGNAL dout               : std_logic := '0';
   SIGNAL fpga_reset         : std_logic;
   SIGNAL g_feedback_q16     : std_logic_vector(15 DOWNTO 0);
   SIGNAL left_ear_volume_d  : unsigned(7 DOWNTO 0);
   SIGNAL left_in            : std_logic_vector(15 DOWNTO 0);
   SIGNAL master_volume_d    : unsigned(7 DOWNTO 0);
   SIGNAL right_ear_volume_d : unsigned(7 DOWNTO 0);
   SIGNAL right_in           : std_logic_vector(15 DOWNTO 0);
   SIGNAL u_delay_samples    : unsigned(18 DOWNTO 0);
   SIGNAL u_g_feedback_q16   : unsigned(15 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL scan_code_internal : std_logic_vector (7 DOWNTO 0);


   -- Component Declarations
   COMPONENT PLL65M
   PORT (
      areset : IN     STD_LOGIC  := '0';
      inclk0 : IN     STD_LOGIC  := '0';
      c0     : OUT    STD_LOGIC;
      locked : OUT    STD_LOGIC
   );
   END COMPONENT;
   COMPONENT Vol_BAl
   PORT (
      Enable       : IN     std_logic ;
      Left_Audio   : IN     std_logic_vector (15 DOWNTO 0);
      Reset        : IN     std_logic ;
      Right_Audio  : IN     std_logic_vector (15 DOWNTO 0);
      c0           : IN     std_logic ;
      lrsel        : IN     std_logic ;
      scancode     : IN     std_logic_vector (7 DOWNTO 0);
      Left_Dac     : OUT    std_logic_vector (15 DOWNTO 0);
      Right_Dac    : OUT    std_logic_vector (15 DOWNTO 0);
      signal_ready : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT audio_io
   PORT (
      clk        : IN     std_logic;
      data_ready : IN     std_logic;
      i2s_adcdat : IN     std_logic;
      i2s_bclk   : IN     std_logic;
      i2s_lrclk  : IN     std_logic;
      left_out   : IN     std_logic_vector (15 DOWNTO 0);
      mclk_in    : IN     std_logic;
      right_out  : IN     std_logic_vector (15 DOWNTO 0);
      rst        : IN     std_logic;
      data_valid : OUT    std_logic;
      i2s_dacdat : OUT    std_logic;
      left_in    : OUT    std_logic_vector (15 DOWNTO 0);
      mclk       : OUT    std_logic;
      right_in   : OUT    std_logic_vector (15 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT clock_view
   PORT (
      c0            : IN     STD_LOGIC ;
      reduced_clock : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT echo
   GENERIC (
      G_ADDR_WIDTH    : natural := 20;         --2^20 x 16 = 2 MB
      G_DATA_WIDTH    : natural := 16;         --Audio 16-bit
      G_FS_HZ         : natural := 44100;      --samplerate
      G_GAIN_INIT_Q15 : natural := 9830;       --~0.30 (0.30 * 32768)
      G_GAIN_STEP_Q15 : natural := 512;        --~0.015625 per keyboard use
      G_DELAY_INIT_MS : natural := 1000;       --1.00 s Start
      G_DELAY_STEP_MS : natural := 100         --100 ms per keyboard use
   );
   PORT (
      KB_SCAN_CODE    : IN     std_logic_vector (7 DOWNTO 0);
      RESET_N         : IN     std_logic ;
      audio_in_L      : IN     std_logic_vector (G_DATA_WIDTH-1 DOWNTO 0);
      audio_in_R      : IN     std_logic_vector (G_DATA_WIDTH-1 DOWNTO 0);
      audio_in_valid  : IN     std_logic ;
      clk             : IN     std_logic ;
      SRAM_ADDR       : OUT    std_logic_vector (G_ADDR_WIDTH-1 DOWNTO 0);
      SRAM_CE_N       : OUT    std_logic ;
      SRAM_LB_N       : OUT    std_logic ;
      SRAM_OE_N       : OUT    std_logic ;
      SRAM_UB_N       : OUT    std_logic ;
      SRAM_WE_N       : OUT    std_logic ;
      audio_in_ready  : OUT    std_logic ;
      audio_out_L     : OUT    std_logic_vector (G_DATA_WIDTH-1 DOWNTO 0);
      audio_out_R     : OUT    std_logic_vector (G_DATA_WIDTH-1 DOWNTO 0);
      audio_out_valid : OUT    std_logic ;
      delay_samples   : OUT    std_logic_vector (18 DOWNTO 0);
      g_feedback_q15  : OUT    std_logic_vector (15 DOWNTO 0);
      SRAM_DQ         : INOUT  std_logic_vector (G_DATA_WIDTH-1 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT i2c
   PORT (
      SDA   : OUT    std_logic ;
      SCL   : OUT    std_logic ;
      Reset : IN     std_logic ;
      HEX6  : OUT    std_logic_vector (0 TO 6);
      HEX7  : OUT    std_logic_vector (0 TO 6);
      c0    : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT kb_decoder
   PORT (
      kb_clk     : IN     std_logic;
      kb_data    : IN     std_logic;
      sys_clk    : IN     std_logic;
      scan_code  : OUT    std_logic_vector (7 DOWNTO 0);
      scan_ready : OUT    std_logic
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : PLL65M USE ENTITY echo_lib.PLL65M;
   FOR ALL : Vol_BAl USE ENTITY echo_lib.Vol_BAl;
   FOR ALL : audio_io USE ENTITY echo_lib.audio_io;
   FOR ALL : clock_view USE ENTITY echo_lib.clock_view;
   FOR ALL : echo USE ENTITY echo_lib.echo;
   FOR ALL : i2c USE ENTITY echo_lib.i2c;
   FOR ALL : kb_decoder USE ENTITY echo_lib.kb_decoder;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_15' of 'buff'
   u_delay_samples <= unsigned(delay_samples);

   -- ModuleWare code(v1.12) for instance 'U_16' of 'buff'
   u_g_feedback_q16 <= unsigned(g_feedback_q16);

   -- ModuleWare code(v1.12) for instance 'U_17' of 'buff'
   reset_led <= fpga_reset;

   -- ModuleWare code(v1.12) for instance 'U_20' of 'buff'
   audio_debug <= right_in(15 DOWNTO 8);

   -- ModuleWare code(v1.12) for instance 'U_8' of 'gnd'
   master_volume_d <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_9' of 'gnd'
   Right_Audio <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_10' of 'gnd'
   Left_Audio <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_11' of 'gnd'
   Enable <= '0';

   -- ModuleWare code(v1.12) for instance 'U_12' of 'gnd'
   balance_d <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_13' of 'gnd'
   right_ear_volume_d <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_14' of 'gnd'
   left_ear_volume_d <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_0' of 'inv'
   dout <= NOT(fpga_reset_n);

   -- Instance port mappings.
   U_6 : PLL65M
      PORT MAP (
         areset => dout,
         inclk0 => fpga_clk,
         c0     => c0,
         locked => fpga_reset
      );
   U_2 : Vol_BAl
      PORT MAP (
         Enable       => Enable,
         Left_Audio   => Left_Audio,
         Reset        => fpga_reset,
         Right_Audio  => Right_Audio,
         c0           => c0,
         lrsel        => AUD_DACLRCK,
         scancode     => scan_code_internal,
         Left_Dac     => OPEN,
         Right_Dac    => OPEN,
         signal_ready => OPEN
      );
   U_5 : audio_io
      PORT MAP (
         clk        => c0,
         rst        => fpga_reset,
         i2s_bclk   => AUD_BCLK,
         i2s_lrclk  => AUD_DACLRCK,
         i2s_adcdat => AUD_ADCDAT,
         i2s_dacdat => AUD_DACDAT,
         mclk_in    => AUD_XCK,
         mclk       => AUD_ADCLRCK,
         left_in    => left_in,
         right_in   => right_in,
         data_valid => data_valid,
         left_out   => audio_out_L,
         right_out  => audio_out_R,
         data_ready => audio_out_valid
      );
   U_7 : clock_view
      PORT MAP (
         c0            => c0,
         reduced_clock => reduced_clock
      );
   U_1 : echo
      PORT MAP (
         KB_SCAN_CODE    => scan_code_internal,
         RESET_N         => fpga_reset,
         audio_in_L      => left_in,
         audio_in_R      => right_in,
         audio_in_valid  => data_valid,
         clk             => c0,
         SRAM_ADDR       => SRAM_ADDR,
         SRAM_CE_N       => SRAM_CE_N,
         SRAM_LB_N       => SRAM_LB_N,
         SRAM_OE_N       => SRAM_OE_N,
         SRAM_UB_N       => SRAM_UB_N,
         SRAM_WE_N       => SRAM_WE_N,
         audio_in_ready  => OPEN,
         audio_out_L     => audio_out_L,
         audio_out_R     => audio_out_R,
         audio_out_valid => audio_out_valid,
         delay_samples   => delay_samples,
         g_feedback_q15  => g_feedback_q16,
         SRAM_DQ         => SRAM_DQ
      );
   U_3 : i2c
      PORT MAP (
         SDA   => SDA,
         SCL   => SCL,
         Reset => fpga_reset,
         HEX6  => HEX6,
         HEX7  => HEX7,
         c0    => c0
      );
   U_4 : kb_decoder
      PORT MAP (
         sys_clk    => c0,
         kb_clk     => kb_clk,
         kb_data    => kb_data,
         scan_code  => scan_code_internal,
         scan_ready => OPEN
      );

   -- Implicit buffered output assignments
   scan_code <= scan_code_internal;

END struct;
