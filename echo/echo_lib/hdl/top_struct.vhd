-- VHDL Entity echo_lib.top.symbol
--
-- Created:
--          by - leoag319.student-liu.se (muxen1-112.ad.liu.se)
--          at - 16:19:50 09/22/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY top IS
-- Declarations

END top ;

--
-- VHDL Architecture echo_lib.top.struct
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-112.ad.liu.se)
--          at - 11:23:00 10/20/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY echo_lib;

ARCHITECTURE struct OF top IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL balance            : unsigned(7 DOWNTO 0);
   SIGNAL balance_d          : unsigned(2 DOWNTO 0);
   SIGNAL c0                 : std_logic;
   SIGNAL echo_duration      : unsigned(7 DOWNTO 0);
   SIGNAL echo_duration_d    : unsigned(2 DOWNTO 0);
   SIGNAL echo_intensity     : unsigned(7 DOWNTO 0);
   SIGNAL echo_intensity_d   : unsigned(2 DOWNTO 0);
   SIGNAL fpga_clk           : STD_LOGIC := '0';
   SIGNAL fpga_clk_n         : std_logic;
   SIGNAL fpga_reset_n       : std_logic;
   SIGNAL left_ear_volume    : unsigned(7 DOWNTO 0);
   SIGNAL left_ear_volume_d  : unsigned(2 DOWNTO 0);
   SIGNAL load_new           : std_logic;
   SIGNAL master_volume      : unsigned(7 DOWNTO 0);
   SIGNAL master_volume_d    : unsigned(2 DOWNTO 0);
   SIGNAL reset_n            : std_logic;
   SIGNAL right_ear_volume   : unsigned(7 DOWNTO 0);
   SIGNAL right_ear_volume_d : unsigned(2 DOWNTO 0);
   SIGNAL vga_b              : std_logic_vector(7 DOWNTO 0);
   SIGNAL vga_blank_n        : std_logic;
   SIGNAL vga_clk            : std_logic;
   SIGNAL vga_g              : std_logic_vector(7 DOWNTO 0);
   SIGNAL vga_hsync_n        : std_logic;
   SIGNAL vga_r              : std_logic_vector(7 DOWNTO 0);
   SIGNAL vga_sync           : std_logic;
   SIGNAL vga_vsync_n        : std_logic;


   -- Component Declarations
   COMPONENT audio_io
   END COMPONENT;
   COMPONENT echo
   END COMPONENT;
   COMPONENT i2c
   END COMPONENT;
   COMPONENT kb_decoder
   END COMPONENT;
   COMPONENT vga
   PORT (
      balance_d          : IN     unsigned (2 DOWNTO 0);
      echo_duration_d    : IN     unsigned (2 DOWNTO 0);
      echo_intensity_d   : IN     unsigned (2 DOWNTO 0);
      fpga_clk           : IN     STD_LOGIC  := '0';
      fpga_reset_n       : IN     std_logic ;
      left_ear_volume_d  : IN     unsigned (2 DOWNTO 0);
      load_new           : IN     std_logic ;
      master_volume_d    : IN     unsigned (2 DOWNTO 0);
      right_ear_volume_d : IN     unsigned (2 DOWNTO 0);
      vga_b              : OUT    std_logic_vector (7 DOWNTO 0);
      vga_blank_n        : OUT    std_logic ;
      vga_clk            : OUT    std_logic ;
      vga_g              : OUT    std_logic_vector (7 DOWNTO 0);
      vga_hsync_n        : OUT    std_logic ;
      vga_r              : OUT    std_logic_vector (7 DOWNTO 0);
      vga_sync           : OUT    std_logic ;
      vga_vsync_n        : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT vol_bal
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : audio_io USE ENTITY echo_lib.audio_io;
   FOR ALL : echo USE ENTITY echo_lib.echo;
   FOR ALL : i2c USE ENTITY echo_lib.i2c;
   FOR ALL : kb_decoder USE ENTITY echo_lib.kb_decoder;
   FOR ALL : vga USE ENTITY echo_lib.vga;
   FOR ALL : vol_bal USE ENTITY echo_lib.vol_bal;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_2 : audio_io;
   U_1 : echo;
   U_5 : i2c;
   U_6 : kb_decoder;
   U_3 : vga
      PORT MAP (
         balance_d          => balance_d,
         echo_duration_d    => echo_duration_d,
         echo_intensity_d   => echo_intensity_d,
         fpga_clk           => fpga_clk,
         fpga_reset_n       => fpga_reset_n,
         left_ear_volume_d  => left_ear_volume_d,
         load_new           => load_new,
         master_volume_d    => master_volume_d,
         right_ear_volume_d => right_ear_volume_d,
         vga_b              => vga_b,
         vga_blank_n        => vga_blank_n,
         vga_clk            => vga_clk,
         vga_g              => vga_g,
         vga_hsync_n        => vga_hsync_n,
         vga_r              => vga_r,
         vga_sync           => vga_sync,
         vga_vsync_n        => vga_vsync_n
      );
   U_4 : vol_bal;

END struct;
