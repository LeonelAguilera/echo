-- VHDL Entity echo_lib.point_computation.interface
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-107.ad.liu.se)
--          at - 16:47:45 10/14/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
LIBRARY echo_lib;
USE echo_lib.color_t.ALL;

ENTITY point_computation IS
   GENERIC( 
      minor_radius    : integer := 44;       -- 
      major_radius    : integer := 84;       -- 
      angle_amplitude : integer := 270;      -- 
      center_angle    : integer := 90;       -- 
      center_x        : integer := 195;      -- 
      center_y        : integer := 197;      -- 
      tap_width       : integer := 24;       -- 
      tap_height      : integer := 48        -- 
   );
   PORT( 
      angle   : IN     unsigned (7 DOWNTO 0);
      c0      : IN     std_logic;
      v_count : IN     unsigned (9 DOWNTO 0);
      Ax      : OUT    unsigned (10 DOWNTO 0);
      Ay      : OUT    unsigned (9 DOWNTO 0);
      Bx      : OUT    unsigned (10 DOWNTO 0);
      By      : OUT    unsigned (9 DOWNTO 0);
      Cx      : OUT    unsigned (10 DOWNTO 0);
      Cy      : OUT    unsigned (9 DOWNTO 0);
      Dx      : OUT    unsigned (10 DOWNTO 0);
      Dy      : OUT    unsigned (9 DOWNTO 0)
   );

-- Declarations

END point_computation ;

--
-- VHDL Architecture echo_lib.point_computation.struct
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-107.ad.liu.se)
--          at - 16:49:31 10/14/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
USE IEEE.math_real.all;
LIBRARY work;
USE work.codric_aux.all;

LIBRARY echo_lib;

ARCHITECTURE struct OF point_computation IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL done           : std_logic;
   SIGNAL dout           : UNSIGNED(9 DOWNTO 0);
   SIGNAL next_point     : std_logic;
   SIGNAL point_selector : BIT_VECTOR(1 DOWNTO 0);
   SIGNAL radius         : UNSIGNED(7 DOWNTO 0);
   SIGNAL radius_t       : UNSIGNED(7 DOWNTO 0);
   SIGNAL reset          : std_logic;
   SIGNAL start          : std_logic;
   SIGNAL theta          : angle_t;
   SIGNAL theta_t        : angle_t;
   SIGNAL x_component    : SIGNED(11 DOWNTO 0);
   SIGNAL y_component    : SIGNED(11 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_6' of 'adff'
   SIGNAL mw_U_6reg_cval : unsigned(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_7' of 'adff'
   SIGNAL mw_U_7reg_cval : angle_t;

   -- Component Declarations
   COMPONENT CODRIC
   GENERIC (
      number_of_iterations : INTEGER := 10;
      angle_amplitude      : INTEGER := 270
   );
   PORT (
      c0          : IN     std_logic ;
      start       : IN     std_logic ;
      done        : OUT    std_logic ;
      x_component : OUT    SIGNED (11 DOWNTO 0);
      y_component : OUT    SIGNED (11 DOWNTO 0);
      radius_t    : IN     UNSIGNED (7 DOWNTO 0);
      theta_t     : IN     angle_t 
   );
   END COMPONENT;
   COMPONENT intermediate_registers
   GENERIC (
      center_x : INTEGER := 195;
      center_y : INTEGER := 197
   );
   PORT (
      c0             : IN     std_logic ;
      done           : IN     std_logic ;
      point_selector : IN     BIT_VECTOR (1 DOWNTO 0);
      x_component    : IN     SIGNED (11 DOWNTO 0);
      y_component    : IN     SIGNED (11 DOWNTO 0);
      Ax             : OUT    unsigned (10 DOWNTO 0);
      Ay             : OUT    unsigned (9 DOWNTO 0);
      Bx             : OUT    unsigned (10 DOWNTO 0);
      By             : OUT    unsigned (9 DOWNTO 0);
      Cx             : OUT    unsigned (10 DOWNTO 0);
      Cy             : OUT    unsigned (9 DOWNTO 0);
      Dx             : OUT    unsigned (10 DOWNTO 0);
      Dy             : OUT    unsigned (9 DOWNTO 0);
      next_point     : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT point_counter
   PORT (
      c0             : IN     std_logic ;
      next_point     : IN     std_logic ;
      reset          : IN     std_logic ;
      point_selector : OUT    BIT_VECTOR (1 DOWNTO 0);
      start          : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT point_polar_coordinates_calculator
   GENERIC (
      minor_radius    : INTEGER := 44;
      major_radius    : INTEGER := 84;
      angle_amplitude : INTEGER := 270;
      center_angle    : INTEGER := 90;
      tap_width       : INTEGER := 24;
      tap_height      : INTEGER := 48
   );
   PORT (
      angle          : IN     unsigned (7 DOWNTO 0);
      point_selector : IN     BIT_VECTOR (1 DOWNTO 0);
      radius         : OUT    UNSIGNED (7 DOWNTO 0);
      theta          : OUT    angle_t 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : CODRIC USE ENTITY echo_lib.CODRIC;
   FOR ALL : intermediate_registers USE ENTITY echo_lib.intermediate_registers;
   FOR ALL : point_counter USE ENTITY echo_lib.point_counter;
   FOR ALL : point_polar_coordinates_calculator USE ENTITY echo_lib.point_polar_coordinates_calculator;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_6' of 'adff'
   u_6seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         mw_U_6reg_cval <= radius;
      END IF;
   END PROCESS u_6seq_proc;
   radius_t <= mw_U_6reg_cval;

   -- ModuleWare code(v1.12) for instance 'U_7' of 'adff'
   u_7seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         mw_U_7reg_cval <= theta;
      END IF;
   END PROCESS u_7seq_proc;
   theta_t <= mw_U_7reg_cval;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'comp'
   u_4combo_proc : PROCESS (v_count, dout)
   VARIABLE temp_lout : std_logic;
   
   BEGIN
   temp_lout := '0';
      IF (v_count = dout) THEN
         temp_lout := '1';
      END IF;
   reset <= temp_lout;
   END PROCESS u_4combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'constval'
   dout <= "1100000001";

   -- Instance port mappings.
   U_0 : CODRIC
      GENERIC MAP (
         number_of_iterations => 10,
         angle_amplitude      => 270
      )
      PORT MAP (
         c0          => c0,
         start       => start,
         done        => done,
         x_component => x_component,
         y_component => y_component,
         radius_t    => radius_t,
         theta_t     => theta_t
      );
   U_3 : intermediate_registers
      GENERIC MAP (
         center_x => 195,
         center_y => 197
      )
      PORT MAP (
         c0             => c0,
         done           => done,
         point_selector => point_selector,
         x_component    => x_component,
         y_component    => y_component,
         Ax             => Ax,
         Ay             => Ay,
         Bx             => Bx,
         By             => By,
         Cx             => Cx,
         Cy             => Cy,
         Dx             => Dx,
         Dy             => Dy,
         next_point     => next_point
      );
   U_2 : point_counter
      PORT MAP (
         c0             => c0,
         next_point     => next_point,
         reset          => reset,
         point_selector => point_selector,
         start          => start
      );
   U_1 : point_polar_coordinates_calculator
      GENERIC MAP (
         minor_radius    => 44,
         major_radius    => 84,
         angle_amplitude => 270,
         center_angle    => 90,
         tap_width       => 24,
         tap_height      => 48
      )
      PORT MAP (
         angle          => angle,
         point_selector => point_selector,
         radius         => radius,
         theta          => theta
      );

END struct;
