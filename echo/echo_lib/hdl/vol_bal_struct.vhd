-- VHDL Entity echo_lib.Vol_BAl.symbol
--
-- Created:
--          by - alfth698.student-liu.se (muxen2-107.ad.liu.se)
--          at - 13:50:56 10/20/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY Vol_BAl IS
   PORT( 
      Enable       : IN     std_logic;
      Left_Audio   : IN     std_logic_vector (15 DOWNTO 0);
      PLL          : IN     std_logic;
      Reset        : IN     std_logic;
      Right_Audio  : IN     std_logic_vector (15 DOWNTO 0);
      Vector_Value : IN     std_logic_vector;
      DAC          : OUT    signed (15 DOWNTO 0);
      overflow     : OUT    std_logic;
      signal_ready : OUT    std_logic
   );

-- Declarations

END Vol_BAl ;

--
-- VHDL Architecture echo_lib.Vol_BAl.struct
--
-- Created:
--          by - alfth698.student-liu.se (muxen2-107.ad.liu.se)
--          at - 13:50:56 10/20/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY echo_lib;

ARCHITECTURE struct OF Vol_BAl IS

   -- Architecture declarations
   attribute pin_number of PLL : signal is "AF14";

   -- Internal signal declarations
   SIGNAL APressed  : std_logic;
   SIGNAL DAC_en    : std_logic;
   SIGNAL DPressed  : std_logic;
   SIGNAL SPressed  : std_logic;
   SIGNAL TXReg     : signed(15 DOWNTO 0);
   SIGNAL WPressed  : std_logic;
   SIGNAL bal_count : unsigned(3 DOWNTO 0);
   SIGNAL lrsel     : std_logic;
   SIGNAL vol_count : unsigned(3 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL overflow_internal : std_logic;


attribute pin_number of PLL : signal is "AF14";

   -- Component Declarations
   COMPONENT Key_Data
   PORT (
      Vector_Value : IN     std_logic_vector ;
      WPressed     : OUT    std_logic ;
      SPressed     : OUT    std_logic ;
      DPressed     : OUT    std_logic ;
      APressed     : OUT    std_logic ;
      overflow     : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT Left_Right
   PORT (
      Left_Audio  : IN     std_logic_vector (15 DOWNTO 0);
      Enable      : IN     std_logic ;
      DAC_en      : OUT    std_logic ;
      TXReg       : OUT    signed (15 DOWNTO 0);
      lrsel       : OUT    std_logic ;
      Right_Audio : IN     std_logic_vector (15 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT Settings
   PORT (
      Reset     : IN     std_logic ;
      DPressed  : IN     std_logic ;
      WPressed  : IN     std_logic ;
      SPressed  : IN     std_logic ;
      overflow  : IN     std_logic ;
      vol_count : OUT    unsigned (3 DOWNTO 0);
      PLL       : IN     std_logic ;
      bal_count : OUT    unsigned (3 DOWNTO 0);
      APressed  : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT V_B
   PORT (
      lrsel        : IN     std_logic ;
      TXReg        : IN     signed (15 DOWNTO 0);
      DAC_en       : IN     std_logic ;
      DAC          : OUT    signed (15 DOWNTO 0);
      overflow     : OUT    std_logic ;
      signal_ready : OUT    std_logic ;
      Reset        : IN     std_logic ;
      PLL          : IN     std_logic ;
      bal_count    : IN     unsigned (3 DOWNTO 0);
      vol_count    : IN     unsigned (3 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Key_Data USE ENTITY echo_lib.Key_Data;
   FOR ALL : Left_Right USE ENTITY echo_lib.Left_Right;
   FOR ALL : Settings USE ENTITY echo_lib.Settings;
   FOR ALL : V_B USE ENTITY echo_lib.V_B;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_3 : Key_Data
      PORT MAP (
         Vector_Value => Vector_Value,
         WPressed     => WPressed,
         SPressed     => SPressed,
         DPressed     => DPressed,
         APressed     => APressed,
         overflow     => overflow_internal
      );
   U_1 : Left_Right
      PORT MAP (
         Left_Audio  => Left_Audio,
         Enable      => Enable,
         DAC_en      => DAC_en,
         TXReg       => TXReg,
         lrsel       => lrsel,
         Right_Audio => Right_Audio
      );
   U_2 : Settings
      PORT MAP (
         Reset     => Reset,
         DPressed  => DPressed,
         WPressed  => WPressed,
         SPressed  => SPressed,
         overflow  => overflow_internal,
         vol_count => vol_count,
         PLL       => PLL,
         bal_count => bal_count,
         APressed  => APressed
      );
   U_0 : V_B
      PORT MAP (
         lrsel        => lrsel,
         TXReg        => TXReg,
         DAC_en       => DAC_en,
         DAC          => DAC,
         overflow     => overflow_internal,
         signal_ready => signal_ready,
         Reset        => Reset,
         PLL          => PLL,
         bal_count    => bal_count,
         vol_count    => vol_count
      );

   -- Implicit buffered output assignments
   overflow <= overflow_internal;

END struct;
