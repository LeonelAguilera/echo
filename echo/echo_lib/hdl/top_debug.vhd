-- VHDL Entity echo_lib.top.symbol
--
-- Created:
--          by - alfth698.student-liu.se (muxen2-109.ad.liu.se)
--          at - 16:57:22 10/28/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY top IS
   GENERIC( 
      G_ADDR_WIDTH : natural := 20;      --2^20 x 16 = 2 MB
      G_DATA_WIDTH : natural := 16       --Audio 16-bit
   );
   PORT( 
      AUD_ADCDAT  : IN     std_logic;
      AUD_BCLK    : IN     std_logic;
      AUD_DACLRCK : IN     std_logic;
      AUD_XCK     : IN     std_logic;
      fpga_clk    : IN     STD_LOGIC;
      fpga_reset  : IN     std_logic;
      kb_clk      : IN     std_logic;
      kb_data     : IN     std_logic;
      AUD_ADCLRCK : OUT    std_logic;
      AUD_DACDAT  : OUT    std_logic;
      HEX6        : OUT    std_logic_vector (0 TO 6);
      HEX7        : OUT    std_logic_vector (0 TO 6);
      SCL         : OUT    std_logic;
      SDA         : OUT    std_logic;
      SRAM_ADDR   : OUT    std_logic_vector (G_ADDR_WIDTH-1 DOWNTO 0);
      SRAM_CE_N   : OUT    std_logic;
      SRAM_LB_N   : OUT    std_logic;
      SRAM_OE_N   : OUT    std_logic;
      SRAM_UB_N   : OUT    std_logic;
      SRAM_WE_N   : OUT    std_logic;
      vga_b       : OUT    std_logic_vector (7 DOWNTO 0);
      vga_blank_n : OUT    std_logic;
      vga_clk     : OUT    std_logic;
      vga_g       : OUT    std_logic_vector (7 DOWNTO 0);
      vga_hsync_n : OUT    std_logic;
      vga_r       : OUT    std_logic_vector (7 DOWNTO 0);
      vga_sync    : OUT    std_logic;
      vga_vsync_n : OUT    std_logic;
      SRAM_DQ     : INOUT  std_logic_vector (G_DATA_WIDTH-1 DOWNTO 0)
   );

-- Declarations

END top ;

--
-- VHDL Architecture echo_lib.top.debug
--
-- Created:
--          by - alfth698.student-liu.se (muxen2-109.ad.liu.se)
--          at - 17:46:52 10/28/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY echo_lib;

ARCHITECTURE debug OF top IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Enable             : std_logic;
   SIGNAL Left_Audio         : std_logic_vector(15 DOWNTO 0);
   SIGNAL Right_Audio        : std_logic_vector(15 DOWNTO 0);
   SIGNAL balance_d          : unsigned(7 DOWNTO 0);
   SIGNAL c0                 : STD_LOGIC;
   SIGNAL c1                 : std_logic;
   SIGNAL data_ready         : std_logic;
   SIGNAL data_valid         : std_logic;
   SIGNAL dout1              : std_logic;
   SIGNAL echo_duration_d    : unsigned(7 DOWNTO 0);
   SIGNAL echo_intensity_d   : unsigned(7 DOWNTO 0);
   SIGNAL left_ear_volume_d  : unsigned(7 DOWNTO 0);
   SIGNAL left_in            : std_logic_vector(15 DOWNTO 0);
   SIGNAL left_out           : std_logic_vector(15 DOWNTO 0);
   SIGNAL locked             : STD_LOGIC;
   SIGNAL master_volume_d    : unsigned(7 DOWNTO 0);
   SIGNAL right_ear_volume_d : unsigned(7 DOWNTO 0);
   SIGNAL right_in           : std_logic_vector(15 DOWNTO 0);
   SIGNAL right_out          : std_logic_vector(15 DOWNTO 0);
   SIGNAL scan_code          : std_logic_vector(7 DOWNTO 0);


   -- Component Declarations
   COMPONENT PLL65M
   PORT (
      areset : IN     STD_LOGIC  := '0';
      inclk0 : IN     STD_LOGIC  := '0';
      c0     : OUT    STD_LOGIC;
      locked : OUT    STD_LOGIC
   );
   END COMPONENT;
   COMPONENT Vol_BAl
   PORT (
      Enable       : IN     std_logic ;
      Left_Audio   : IN     std_logic_vector (15 DOWNTO 0);
      Reset        : IN     std_logic ;
      Right_Audio  : IN     std_logic_vector (15 DOWNTO 0);
      c0           : IN     std_logic ;
      lrsel        : IN     std_logic ;
      scancode     : IN     std_logic_vector (7 DOWNTO 0);
      Left_Dac     : OUT    std_logic_vector (15 DOWNTO 0);
      Right_Dac    : OUT    std_logic_vector (15 DOWNTO 0);
      signal_ready : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT audio_io
   PORT (
      clk        : IN     std_logic;
      data_ready : IN     std_logic;
      i2s_adcdat : IN     std_logic;
      i2s_bclk   : IN     std_logic;
      i2s_lrclk  : IN     std_logic;
      left_out   : IN     std_logic_vector (15 DOWNTO 0);
      mclk_in    : IN     std_logic;
      right_out  : IN     std_logic_vector (15 DOWNTO 0);
      rst        : IN     std_logic;
      data_valid : OUT    std_logic;
      i2s_dacdat : OUT    std_logic;
      left_in    : OUT    std_logic_vector (15 DOWNTO 0);
      mclk       : OUT    std_logic;
      right_in   : OUT    std_logic_vector (15 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT kb_decoder
   PORT (
      kb_clk     : IN     std_logic;
      kb_data    : IN     std_logic;
      sys_clk    : IN     std_logic;
      scan_code  : OUT    std_logic_vector (7 DOWNTO 0);
      scan_ready : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT vga
   PORT (
      balance_d          : IN     unsigned (7 DOWNTO 0);
      c0                 : IN     std_logic ;
      echo_duration_d    : IN     unsigned (7 DOWNTO 0);
      echo_intensity_d   : IN     unsigned (7 DOWNTO 0);
      fpga_reset_n       : IN     std_logic ;
      left_ear_volume_d  : IN     unsigned (7 DOWNTO 0);
      master_volume_d    : IN     unsigned (7 DOWNTO 0);
      right_ear_volume_d : IN     unsigned (7 DOWNTO 0);
      vga_b              : OUT    std_logic_vector (7 DOWNTO 0);
      vga_blank_n        : OUT    std_logic ;
      vga_clk            : OUT    std_logic ;
      vga_g              : OUT    std_logic_vector (7 DOWNTO 0);
      vga_hsync_n        : OUT    std_logic ;
      vga_r              : OUT    std_logic_vector (7 DOWNTO 0);
      vga_sync           : OUT    std_logic ;
      vga_vsync_n        : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : PLL65M USE ENTITY echo_lib.PLL65M;
   FOR ALL : Vol_BAl USE ENTITY echo_lib.Vol_BAl;
   FOR ALL : audio_io USE ENTITY echo_lib.audio_io;
   FOR ALL : kb_decoder USE ENTITY echo_lib.kb_decoder;
   FOR ALL : vga USE ENTITY echo_lib.vga;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_3' of 'gnd'
   dout1 <= '0';

   -- ModuleWare code(v1.12) for instance 'U_9' of 'gnd'
   master_volume_d <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_10' of 'gnd'
   balance_d <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_11' of 'gnd'
   left_ear_volume_d <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_12' of 'gnd'
   right_ear_volume_d <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_13' of 'gnd'
   echo_duration_d <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_14' of 'gnd'
   echo_intensity_d <= (OTHERS => '0');

   -- ModuleWare code(v1.12) for instance 'U_15' of 'gnd'
   c1 <= '0';

   -- Instance port mappings.
   U_4 : PLL65M
      PORT MAP (
         areset => fpga_reset,
         inclk0 => fpga_clk,
         c0     => c0,
         locked => locked
      );
   U_6 : Vol_BAl
      PORT MAP (
         Enable       => Enable,
         Left_Audio   => Left_Audio,
         Reset        => locked,
         Right_Audio  => Right_Audio,
         c0           => c0,
         lrsel        => dout1,
         scancode     => scan_code,
         Left_Dac     => left_out,
         Right_Dac    => right_out,
         signal_ready => data_ready
      );
   U_0 : audio_io
      PORT MAP (
         clk        => c0,
         rst        => locked,
         i2s_bclk   => AUD_BCLK,
         i2s_lrclk  => AUD_DACLRCK,
         i2s_adcdat => AUD_ADCDAT,
         i2s_dacdat => AUD_DACDAT,
         mclk_in    => AUD_XCK,
         mclk       => AUD_ADCLRCK,
         left_in    => left_in,
         right_in   => right_in,
         data_valid => data_valid,
         left_out   => left_out,
         right_out  => right_out,
         data_ready => data_ready
      );
   U_5 : kb_decoder
      PORT MAP (
         sys_clk    => c0,
         kb_clk     => kb_clk,
         kb_data    => kb_data,
         scan_code  => scan_code,
         scan_ready => OPEN
      );
   U_2 : vga
      PORT MAP (
         balance_d          => balance_d,
         c0                 => c1,
         echo_duration_d    => echo_duration_d,
         echo_intensity_d   => echo_intensity_d,
         fpga_reset_n       => locked,
         left_ear_volume_d  => left_ear_volume_d,
         master_volume_d    => master_volume_d,
         right_ear_volume_d => right_ear_volume_d,
         vga_b              => vga_b,
         vga_blank_n        => vga_blank_n,
         vga_clk            => vga_clk,
         vga_g              => vga_g,
         vga_hsync_n        => vga_hsync_n,
         vga_r              => vga_r,
         vga_sync           => vga_sync,
         vga_vsync_n        => vga_vsync_n
      );

END debug;
