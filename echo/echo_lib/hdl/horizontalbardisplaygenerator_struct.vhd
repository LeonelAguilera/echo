-- VHDL Entity echo_lib.HorizontalBarDisplayGenerator.symbol
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-109.ad.liu.se)
--          at - 14:30:23 10/13/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
LIBRARY echo_lib;
USE echo_lib.color_t.ALL;

ENTITY HorizontalBarDisplayGenerator IS
   GENERIC( 
      position_x   : integer := 25;
      position_y   : integer := 386;
      width        : integer := 340;
      height       : integer := 48;
      wiper_width  : integer := 24;
      wiper_height : integer := 96
   );
   PORT( 
      h_count        : IN     unsigned (10 DOWNTO 0);
      v_count        : IN     unsigned (9 DOWNTO 0);
      wiper_position : IN     unsigned (7 DOWNTO 0);
      hbar_color     : OUT    rgb_color_t;
      mask_f         : OUT    std_logic
   );

-- Declarations

END HorizontalBarDisplayGenerator ;

--
-- VHDL Architecture echo_lib.HorizontalBarDisplayGenerator.struct
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-109.ad.liu.se)
--          at - 14:39:23 10/13/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
USE IEEE.MATH_REAL.all;
LIBRARY echo_lib;
USE echo_lib.color_t.ALL;


ARCHITECTURE struct OF HorizontalBarDisplayGenerator IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL bar_color             : rgb_color_t;
   SIGNAL bar_mask              : std_logic;
   SIGNAL wiper_center_position : unsigned(10 DOWNTO 0);
   SIGNAL wiper_color           : rgb_color_t;
   SIGNAL wiper_mask            : std_logic;


   -- Component Declarations
   COMPONENT hbar_rasterizer
   GENERIC (
      position_x : INTEGER := 25;
      position_y : INTEGER := 432;
      width      : INTEGER := 340;
      heigth     : INTEGER := 48
   );
   PORT (
      h_count               : IN     unsigned (10 DOWNTO 0);
      v_count               : IN     unsigned (9 DOWNTO 0);
      bar_mask              : OUT    std_logic ;
      wiper_center_position : IN     unsigned (10 DOWNTO 0);
      bar_color             : OUT    rgb_color_t 
   );
   END COMPONENT;
   COMPONENT hbar_wiper_center_position
   GENERIC (
      position_x    : INTEGER := 25;
      width         : INTEGER := 340;
      fixed_comma_p : INTEGER := 3
   );
   PORT (
      h_count               : IN     unsigned (10 DOWNTO 0);
      v_count               : IN     unsigned (9 DOWNTO 0);
      wiper_position        : IN     unsigned (7 DOWNTO 0);
      wiper_center_position : OUT    unsigned (10 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT hbar_wiper_rasterizer
   GENERIC (
      position_x   : INTEGER := 25;
      position_y   : INTEGER := 432;
      wiper_width  : INTEGER := 12;
      wiper_heigth : INTEGER := 96
   );
   PORT (
      h_count               : IN     unsigned (10 DOWNTO 0);
      v_count               : IN     unsigned (9 DOWNTO 0);
      wiper_center_position : IN     unsigned (10 DOWNTO 0);
      wiper_mask            : OUT    std_logic ;
      wiper_color           : OUT    rgb_color_t 
   );
   END COMPONENT;
   COMPONENT two_input_color_mux
   PORT (
      in0   : IN     rgb_color_t;
      in1   : IN     rgb_color_t;
      sel   : IN     STD_LOGIC;
      out_c : OUT    rgb_color_t
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : hbar_rasterizer USE ENTITY echo_lib.hbar_rasterizer;
   FOR ALL : hbar_wiper_center_position USE ENTITY echo_lib.hbar_wiper_center_position;
   FOR ALL : hbar_wiper_rasterizer USE ENTITY echo_lib.hbar_wiper_rasterizer;
   FOR ALL : two_input_color_mux USE ENTITY echo_lib.two_input_color_mux;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_3' of 'or1'
   mask_f <= wiper_mask OR bar_mask;

   -- Instance port mappings.
   U_0 : hbar_rasterizer
      GENERIC MAP (
         position_x => position_x,
         position_y => position_y,
         width      => width,
         heigth     => height
      )
      PORT MAP (
         h_count               => h_count,
         v_count               => v_count,
         bar_mask              => bar_mask,
         wiper_center_position => wiper_center_position,
         bar_color             => bar_color
      );
   U_4 : hbar_wiper_center_position
      GENERIC MAP (
         position_x    => position_x,
         width         => width,
         fixed_comma_p => 3
      )
      PORT MAP (
         h_count               => h_count,
         v_count               => v_count,
         wiper_position        => wiper_position,
         wiper_center_position => wiper_center_position
      );
   U_1 : hbar_wiper_rasterizer
      GENERIC MAP (
         position_x   => position_x,
         position_y   => position_y,
         wiper_width  => wiper_width,
         wiper_heigth => wiper_height
      )
      PORT MAP (
         h_count               => h_count,
         v_count               => v_count,
         wiper_center_position => wiper_center_position,
         wiper_mask            => wiper_mask,
         wiper_color           => wiper_color
      );
   U_2 : two_input_color_mux
      PORT MAP (
         in0   => bar_color,
         in1   => wiper_color,
         sel   => wiper_mask,
         out_c => hbar_color
      );

END struct;
