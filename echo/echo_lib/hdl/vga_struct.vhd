-- VHDL Entity echo_lib.vga.symbol
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-109.ad.liu.se)
--          at - 18:13:10 10/24/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY vga IS
   PORT( 
      balance_d          : IN     unsigned (7 DOWNTO 0);
      c0                 : IN     std_logic;
      echo_duration_d    : IN     unsigned (7 DOWNTO 0);
      echo_intensity_d   : IN     unsigned (7 DOWNTO 0);
      fpga_reset_n       : IN     std_logic;
      left_ear_volume_d  : IN     unsigned (7 DOWNTO 0);
      master_volume_d    : IN     unsigned (7 DOWNTO 0);
      right_ear_volume_d : IN     unsigned (7 DOWNTO 0);
      vga_b              : OUT    std_logic_vector (7 DOWNTO 0);
      vga_blank_n        : OUT    std_logic;
      vga_clk            : OUT    std_logic;
      vga_g              : OUT    std_logic_vector (7 DOWNTO 0);
      vga_hsync_n        : OUT    std_logic;
      vga_r              : OUT    std_logic_vector (7 DOWNTO 0);
      vga_sync           : OUT    std_logic;
      vga_vsync_n        : OUT    std_logic
   );

-- Declarations

END vga ;

--
-- VHDL Architecture echo_lib.vga.struct
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-116.ad.liu.se)
--          at - 12:37:10 10/30/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
LIBRARY echo_lib;
USE echo_lib.color_t.ALL;


ARCHITECTURE struct OF vga IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL balance          : unsigned(7 DOWNTO 0);
   SIGNAL curr_pixel_color : rgb_color_t;
   SIGNAL dout             : std_logic;
   SIGNAL echo_duration    : unsigned(7 DOWNTO 0);
   SIGNAL echo_intensity   : unsigned(7 DOWNTO 0);
   SIGNAL h_count          : unsigned(10 DOWNTO 0);
   SIGNAL hblank           : std_logic;
   SIGNAL left_ear_volume  : unsigned(7 DOWNTO 0);
   SIGNAL master_volume    : unsigned(7 DOWNTO 0);
   SIGNAL prev_pixel_color : rgb_color_t;
   SIGNAL right_ear_volume : unsigned(7 DOWNTO 0);
   SIGNAL v_count          : unsigned(9 DOWNTO 0);
   SIGNAL vblank           : std_logic;


   -- ModuleWare signal declarations(v1.12) for instance 'U_8' of 'adff'
   SIGNAL mw_U_8reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.12) for instance 'U_11' of 'adff'
   SIGNAL mw_U_11reg_cval : unsigned(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_12' of 'adff'
   SIGNAL mw_U_12reg_cval : unsigned(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_13' of 'adff'
   SIGNAL mw_U_13reg_cval : unsigned(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_14' of 'adff'
   SIGNAL mw_U_14reg_cval : unsigned(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_15' of 'adff'
   SIGNAL mw_U_15reg_cval : unsigned(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_16' of 'adff'
   SIGNAL mw_U_16reg_cval : unsigned(7 DOWNTO 0);

   -- Component Declarations
   COMPONENT color_channel_separator
   PORT (
      c0               : IN     std_logic ;
      curr_pixel_color : IN     rgb_color_t ;
      fpga_reset_n     : IN     std_logic ;
      vga_b            : OUT    std_logic_vector (7 DOWNTO 0);
      vga_g            : OUT    std_logic_vector (7 DOWNTO 0);
      vga_r            : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT color_register
   PORT (
      c0               : IN     std_logic ;
      fpga_reset_n     : IN     std_logic ;
      prev_pixel_color : IN     rgb_color_t ;
      curr_pixel_color : OUT    rgb_color_t 
   );
   END COMPONENT;
   COMPONENT h_syncr
   PORT (
      c0           : IN     std_logic ;
      fpga_reset_n : IN     std_logic ;
      h_count      : IN     unsigned (10 DOWNTO 0);
      hblank       : OUT    std_logic ;
      vga_hsync_n  : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT line_counter
   PORT (
      c0           : IN     std_logic ;
      fpga_reset_n : IN     std_logic ;
      h_count      : IN     unsigned (10 DOWNTO 0);
      v_count      : OUT    unsigned (9 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT pixel_color_generator
   PORT (
      balance          : IN     unsigned (7 DOWNTO 0);
      c0               : IN     std_logic ;
      echo_duration    : IN     unsigned (7 DOWNTO 0);
      echo_intensity   : IN     unsigned (7 DOWNTO 0);
      fpga_reset_n     : IN     std_logic ;
      h_count          : IN     unsigned (10 DOWNTO 0);
      left_ear_volume  : IN     unsigned (7 DOWNTO 0);
      master_volume    : IN     unsigned (7 DOWNTO 0);
      right_ear_volume : IN     unsigned (7 DOWNTO 0);
      v_count          : IN     unsigned (9 DOWNTO 0);
      prev_pixel_color : OUT    rgb_color_t 
   );
   END COMPONENT;
   COMPONENT pixel_counter
   PORT (
      c0           : IN     std_logic ;
      fpga_reset_n : IN     std_logic ;
      h_count      : OUT    unsigned (10 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT v_syncr
   PORT (
      c0           : IN     std_logic ;
      fpga_reset_n : IN     std_logic ;
      v_count      : IN     unsigned (9 DOWNTO 0);
      vblank       : OUT    std_logic ;
      vga_vsync_n  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : color_channel_separator USE ENTITY echo_lib.color_channel_separator;
   FOR ALL : color_register USE ENTITY echo_lib.color_register;
   FOR ALL : h_syncr USE ENTITY echo_lib.h_syncr;
   FOR ALL : line_counter USE ENTITY echo_lib.line_counter;
   FOR ALL : pixel_color_generator USE ENTITY echo_lib.pixel_color_generator;
   FOR ALL : pixel_counter USE ENTITY echo_lib.pixel_counter;
   FOR ALL : v_syncr USE ENTITY echo_lib.v_syncr;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_8' of 'adff'
   u_8seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         mw_U_8reg_cval <= dout;
      END IF;
   END PROCESS u_8seq_proc;
   vga_blank_n <= mw_U_8reg_cval;

   -- ModuleWare code(v1.12) for instance 'U_11' of 'adff'
   u_11seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         mw_U_11reg_cval <= balance_d;
      END IF;
   END PROCESS u_11seq_proc;
   left_ear_volume <= mw_U_11reg_cval;

   -- ModuleWare code(v1.12) for instance 'U_12' of 'adff'
   u_12seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         mw_U_12reg_cval <= echo_duration_d;
      END IF;
   END PROCESS u_12seq_proc;
   right_ear_volume <= mw_U_12reg_cval;

   -- ModuleWare code(v1.12) for instance 'U_13' of 'adff'
   u_13seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         mw_U_13reg_cval <= echo_intensity_d;
      END IF;
   END PROCESS u_13seq_proc;
   master_volume <= mw_U_13reg_cval;

   -- ModuleWare code(v1.12) for instance 'U_14' of 'adff'
   u_14seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         mw_U_14reg_cval <= left_ear_volume_d;
      END IF;
   END PROCESS u_14seq_proc;
   balance <= mw_U_14reg_cval;

   -- ModuleWare code(v1.12) for instance 'U_15' of 'adff'
   u_15seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         mw_U_15reg_cval <= master_volume_d;
      END IF;
   END PROCESS u_15seq_proc;
   echo_duration <= mw_U_15reg_cval;

   -- ModuleWare code(v1.12) for instance 'U_16' of 'adff'
   u_16seq_proc: PROCESS (c0)
   BEGIN
      IF (c0'EVENT AND c0='1') THEN
         mw_U_16reg_cval <= right_ear_volume_d;
      END IF;
   END PROCESS u_16seq_proc;
   echo_intensity <= mw_U_16reg_cval;

   -- ModuleWare code(v1.12) for instance 'U_6' of 'gnd'
   vga_sync <= '0';

   -- ModuleWare code(v1.12) for instance 'U_7' of 'inv'
   vga_clk <= NOT(c0);

   -- ModuleWare code(v1.12) for instance 'U_5' of 'nor'
   dout <= NOT(hblank OR vblank);

   -- Instance port mappings.
   U_9 : color_channel_separator
      PORT MAP (
         c0               => c0,
         curr_pixel_color => curr_pixel_color,
         fpga_reset_n     => fpga_reset_n,
         vga_b            => vga_b,
         vga_g            => vga_g,
         vga_r            => vga_r
      );
   U_10 : color_register
      PORT MAP (
         c0               => c0,
         fpga_reset_n     => fpga_reset_n,
         prev_pixel_color => prev_pixel_color,
         curr_pixel_color => curr_pixel_color
      );
   U_3 : h_syncr
      PORT MAP (
         c0           => c0,
         fpga_reset_n => fpga_reset_n,
         h_count      => h_count,
         hblank       => hblank,
         vga_hsync_n  => vga_hsync_n
      );
   U_2 : line_counter
      PORT MAP (
         c0           => c0,
         fpga_reset_n => fpga_reset_n,
         h_count      => h_count,
         v_count      => v_count
      );
   U_0 : pixel_color_generator
      PORT MAP (
         balance          => balance,
         c0               => c0,
         echo_duration    => echo_duration,
         echo_intensity   => echo_intensity,
         fpga_reset_n     => fpga_reset_n,
         h_count          => h_count,
         left_ear_volume  => left_ear_volume,
         master_volume    => master_volume,
         right_ear_volume => right_ear_volume,
         v_count          => v_count,
         prev_pixel_color => prev_pixel_color
      );
   U_1 : pixel_counter
      PORT MAP (
         c0           => c0,
         fpga_reset_n => fpga_reset_n,
         h_count      => h_count
      );
   U_4 : v_syncr
      PORT MAP (
         c0           => c0,
         fpga_reset_n => fpga_reset_n,
         v_count      => v_count,
         vblank       => vblank,
         vga_vsync_n  => vga_vsync_n
      );

END struct;
