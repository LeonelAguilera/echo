-- VHDL Entity echo_lib.pixel_color_generator.interface
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-109.ad.liu.se)
--          at - 12:29:08 10/13/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY pixel_color_generator IS
   PORT( 
      balance          : IN     unsigned (7 DOWNTO 0);
      c0               : IN     std_logic;
      echo_duration    : IN     unsigned (7 DOWNTO 0);
      echo_intensity   : IN     unsigned (7 DOWNTO 0);
      fpga_reset_n     : IN     std_logic;
      h_count          : IN     unsigned (10 DOWNTO 0);
      left_ear_volume  : IN     unsigned (7 DOWNTO 0);
      master_volume    : IN     unsigned (7 DOWNTO 0);
      right_ear_volume : IN     unsigned (7 DOWNTO 0);
      v_count          : IN     unsigned (9 DOWNTO 0);
      vga_b_d          : OUT    std_logic_vector (7 DOWNTO 0);
      vga_g_d          : OUT    std_logic_vector (7 DOWNTO 0);
      vga_r_d          : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END pixel_color_generator ;

--
-- VHDL Architecture echo_lib.pixel_color_generator.vbar_tester
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-109.ad.liu.se)
--          at - 12:28:20 10/13/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
USE IEEE.MATH_REAL.ALL;

LIBRARY echo_lib;

ARCHITECTURE vbar_tester OF pixel_color_generator IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL b_in_0  : std_logic_vector(7 DOWNTO 0);
   SIGNAL b_out   : std_logic_vector(7 DOWNTO 0);
   SIGNAL g_out   : std_logic_vector(7 DOWNTO 0);
   SIGNAL mask_f  : std_logic;
   SIGNAL mask_f1 : std_logic;
   SIGNAL r_out   : std_logic_vector(7 DOWNTO 0);
   SIGNAL reset_n : std_logic;
   SIGNAL vga_b1  : std_logic_vector(7 DOWNTO 0);
   SIGNAL vga_b2  : std_logic_vector(7 DOWNTO 0);
   SIGNAL vga_g1  : std_logic_vector(7 DOWNTO 0);
   SIGNAL vga_g2  : std_logic_vector(7 DOWNTO 0);
   SIGNAL vga_r1  : std_logic_vector(7 DOWNTO 0);
   SIGNAL vga_r2  : std_logic_vector(7 DOWNTO 0);


   -- Component Declarations
   COMPONENT color_mixer
   PORT (
      b_in_0 : IN     std_logic_vector (7 DOWNTO 0);
      b_in_1 : IN     std_logic_vector (7 DOWNTO 0);
      g_in_0 : IN     std_logic_vector (7 DOWNTO 0);
      g_in_1 : IN     std_logic_vector (7 DOWNTO 0);
      r_in_0 : IN     std_logic_vector (7 DOWNTO 0);
      r_in_1 : IN     std_logic_vector (7 DOWNTO 0);
      sel    : IN     std_logic ;
      b_out  : OUT    std_logic_vector (7 DOWNTO 0);
      g_out  : OUT    std_logic_vector (7 DOWNTO 0);
      r_out  : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT vertical_bar_display_generator
   GENERIC (
      position_x          : POSITIVE := 30;
      position_y          : POSITIVE := 280;
      width               : POSITIVE := 48;
      number_of_segments  : POSITIVE := 16;
      segment_height_log2 : POSITIVE := 3;
      segment_thickness   : POSITIVE := 4
   );
   PORT (
      active_segments : IN     UNSIGNED (INTEGER(CEIL(LOG2(REAL(number_of_segments + 1))))-1 DOWNTO 0);
      h_count         : IN     unsigned (10 DOWNTO 0);
      v_count         : IN     unsigned ( 9 DOWNTO 0);
      mask_f          : OUT    std_logic;
      vga_b           : OUT    std_logic_vector (7 DOWNTO 0);
      vga_g           : OUT    std_logic_vector (7 DOWNTO 0);
      vga_r           : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : color_mixer USE ENTITY echo_lib.color_mixer;
   FOR ALL : vertical_bar_display_generator USE ENTITY echo_lib.vertical_bar_display_generator;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_2' of 'gnd'
   b_in_0 <= (OTHERS => '0');

   -- Instance port mappings.
   U_0 : color_mixer
      PORT MAP (
         b_in_0 => b_out,
         b_in_1 => vga_b1,
         g_in_0 => g_out,
         g_in_1 => vga_g1,
         r_in_0 => r_out,
         r_in_1 => vga_r1,
         sel    => mask_f,
         b_out  => vga_b_d,
         g_out  => vga_g_d,
         r_out  => vga_r_d
      );
   U_1 : color_mixer
      PORT MAP (
         b_in_0 => b_in_0,
         b_in_1 => vga_b2,
         g_in_0 => b_in_0,
         g_in_1 => vga_g2,
         r_in_0 => b_in_0,
         r_in_1 => vga_r2,
         sel    => mask_f1,
         b_out  => b_out,
         g_out  => g_out,
         r_out  => r_out
      );
   left_ear_volume_bar : vertical_bar_display_generator
      GENERIC MAP (
         position_x          => 30,
         position_y          => 280,
         width               => 48,
         number_of_segments  => 16,
         segment_height_log2 => 3,
         segment_thickness   => 4
      )
      PORT MAP (
         h_count         => h_count,
         v_count         => v_count,
         active_segments => right_ear_volume(7 DOWNTO 3),
         vga_r           => vga_r2,
         vga_g           => vga_g2,
         vga_b           => vga_b2,
         mask_f          => mask_f1
      );
   right_ear_volume_bar : vertical_bar_display_generator
      GENERIC MAP (
         position_x          => 320,
         position_y          => 280,
         width               => 48,
         number_of_segments  => 16,
         segment_height_log2 => 3,
         segment_thickness   => 4
      )
      PORT MAP (
         h_count         => h_count,
         v_count         => v_count,
         active_segments => left_ear_volume(7 DOWNTO 3),
         vga_r           => vga_r1,
         vga_g           => vga_g1,
         vga_b           => vga_b1,
         mask_f          => mask_f
      );

END vbar_tester;
