-- VHDL Entity echo_lib.AnularDisplayGenerator.symbol
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-109.ad.liu.se)
--          at - 14:39:46 10/13/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
LIBRARY echo_lib;
USE echo_lib.color_t.ALL;

ENTITY AnularDisplayGenerator IS
   GENERIC( 
      minor_radius    : integer := 44;
      major_radius    : integer := 84;
      angle_amplitude : integer := 270;
      center_angle    : integer := 90;
      center_x        : integer := 195;
      center_y        : integer := 197
   );
   PORT( 
      angle                : IN     unsigned (7 DOWNTO 0);
      c0                   : IN     std_logic;
      h_count              : IN     unsigned (10 DOWNTO 0);
      v_count              : IN     unsigned (9 DOWNTO 0);
      anular_display_color : OUT    rgb_color_t;
      mask_f               : OUT    std_logic
   );

-- Declarations

END AnularDisplayGenerator ;

--
-- VHDL Architecture echo_lib.AnularDisplayGenerator.struct
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-109.ad.liu.se)
--          at - 19:06:49 10/14/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
LIBRARY echo_lib;
USE echo_lib.color_t.ALL;
USE IEEE.MATH_REAL.all;


ARCHITECTURE struct OF AnularDisplayGenerator IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL ring_color  : rgb_color_t;
   SIGNAL ring_mask   : std_logic;
   SIGNAL wiper_color : rgb_color_t;
   SIGNAL wiper_mask  : std_logic;


   -- Component Declarations
   COMPONENT ring_generator
   GENERIC (
      minor_radius    : INTEGER := 44;
      major_radius    : INTEGER := 84;
      angle_amplitude : INTEGER := 270;
      center_angle    : INTEGER := 90;
      center_x        : INTEGER := 195;
      center_y        : INTEGER := 197
   );
   PORT (
      v_count    : IN     unsigned (9 DOWNTO 0);
      ring_mask  : OUT    std_logic ;
      ring_color : OUT    rgb_color_t ;
      h_count    : IN     unsigned (10 DOWNTO 0);
      c0         : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT two_input_color_mux
   PORT (
      in0   : IN     rgb_color_t;
      in1   : IN     rgb_color_t;
      sel   : IN     STD_LOGIC;
      out_c : OUT    rgb_color_t
   );
   END COMPONENT;
   COMPONENT wiper_generator
   GENERIC (
      minor_radius    : integer := 44;
      major_radius    : integer := 84;
      angle_amplitude : integer := 270;
      center_angle    : integer := 90;
      center_x        : integer := 195;
      center_y        : integer := 197;
      tap_width       : integer := 24;
      tap_height      : integer := 48
   );
   PORT (
      angle       : IN     unsigned (7 DOWNTO 0);
      c0          : IN     std_logic ;
      h_count     : IN     unsigned (10 DOWNTO 0);
      v_count     : IN     unsigned (9 DOWNTO 0);
      wiper_color : OUT    rgb_color_t ;
      wiper_mask  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : ring_generator USE ENTITY echo_lib.ring_generator;
   FOR ALL : two_input_color_mux USE ENTITY echo_lib.two_input_color_mux;
   FOR ALL : wiper_generator USE ENTITY echo_lib.wiper_generator;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_5' of 'or1'
   mask_f <= wiper_mask OR ring_mask;

   -- Instance port mappings.
   U_0 : ring_generator
      GENERIC MAP (
         minor_radius    => 44,
         major_radius    => 84,
         angle_amplitude => 270,
         center_angle    => 90,
         center_x        => 195,
         center_y        => 197
      )
      PORT MAP (
         v_count    => v_count,
         ring_mask  => ring_mask,
         ring_color => ring_color,
         h_count    => h_count,
         c0         => c0
      );
   U_2 : two_input_color_mux
      PORT MAP (
         in0   => ring_color,
         in1   => wiper_color,
         sel   => wiper_mask,
         out_c => anular_display_color
      );
   U_1 : wiper_generator
      PORT MAP (
         angle       => angle,
         c0          => c0,
         h_count     => h_count,
         v_count     => v_count,
         wiper_color => wiper_color,
         wiper_mask  => wiper_mask
      );

END struct;
