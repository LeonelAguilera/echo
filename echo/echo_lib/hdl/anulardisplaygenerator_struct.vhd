-- VHDL Entity echo_lib.AnularDisplayGenerator.symbol
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-112.ad.liu.se)
--          at - 22:02:03 10/06/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY AnularDisplayGenerator IS
   GENERIC( 
      minor_radius    : integer := 44;
      major_radius    : integer := 84;
      angle_amplitude : integer := 270;
      center_angle    : integer := 90;
      center_x        : integer := 195;
      center_y        : integer := 197
   );
   PORT( 
      angle   : IN     unsigned (7 DOWNTO 0);
      c0      : IN     std_logic;
      h_count : IN     unsigned (10 DOWNTO 0);
      v_count : IN     unsigned (9 DOWNTO 0);
      mask_f  : OUT    std_logic;
      vga_b   : OUT    std_logic_vector (7 DOWNTO 0);
      vga_g   : OUT    std_logic_vector (7 DOWNTO 0);
      vga_r   : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END AnularDisplayGenerator ;

--
-- VHDL Architecture echo_lib.AnularDisplayGenerator.struct
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-112.ad.liu.se)
--          at - 15:30:13 10/09/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY echo_lib;

ARCHITECTURE struct OF AnularDisplayGenerator IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL ring_b     : std_logic_vector(7 DOWNTO 0);
   SIGNAL ring_g     : std_logic_vector(7 DOWNTO 0);
   SIGNAL ring_mask  : std_logic;
   SIGNAL ring_r     : std_logic_vector(7 DOWNTO 0);
   SIGNAL wiper_b    : std_logic_vector(7 DOWNTO 0);
   SIGNAL wiper_g    : std_logic_vector(7 DOWNTO 0);
   SIGNAL wiper_mask : std_logic;
   SIGNAL wiper_r    : std_logic_vector(7 DOWNTO 0);


   -- Component Declarations
   COMPONENT color_mixer
   PORT (
      b_in_0 : IN     std_logic_vector (7 DOWNTO 0);
      b_in_1 : IN     std_logic_vector (7 DOWNTO 0);
      g_in_0 : IN     std_logic_vector (7 DOWNTO 0);
      g_in_1 : IN     std_logic_vector (7 DOWNTO 0);
      r_in_0 : IN     std_logic_vector (7 DOWNTO 0);
      r_in_1 : IN     std_logic_vector (7 DOWNTO 0);
      sel    : IN     std_logic ;
      b_out  : OUT    std_logic_vector (7 DOWNTO 0);
      g_out  : OUT    std_logic_vector (7 DOWNTO 0);
      r_out  : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT ring_generator
   GENERIC (
      minor_radius    : INTEGER := 44;
      major_radius    : INTEGER := 84;
      angle_amplitude : INTEGER := 270;
      center_angle    : INTEGER := 90;
      center_x        : INTEGER := 195;
      center_y        : INTEGER := 197
   );
   PORT (
      h_count   : IN     unsigned (10 DOWNTO 0);
      v_count   : IN     unsigned (9 DOWNTO 0);
      ring_b    : OUT    std_logic_vector (7 DOWNTO 0);
      ring_g    : OUT    std_logic_vector (7 DOWNTO 0);
      ring_mask : OUT    std_logic ;
      ring_r    : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT wiper_generator
   GENERIC (
      minor_radius    : integer := 44;
      major_radius    : integer := 84;
      angle_amplitude : integer := 270;
      center_angle    : integer := 90;
      center_x        : integer := 195;
      center_y        : integer := 197;
      tap_width       : integer := 24;
      tap_height      : integer := 48
   );
   PORT (
      angle      : IN     unsigned (7 DOWNTO 0);
      c0         : IN     std_logic ;
      h_count    : IN     unsigned (10 DOWNTO 0);
      v_count    : IN     unsigned (9 DOWNTO 0);
      wiper_b    : OUT    std_logic_vector (7 DOWNTO 0);
      wiper_g    : OUT    std_logic_vector (7 DOWNTO 0);
      wiper_mask : OUT    std_logic ;
      wiper_r    : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : color_mixer USE ENTITY echo_lib.color_mixer;
   FOR ALL : ring_generator USE ENTITY echo_lib.ring_generator;
   FOR ALL : wiper_generator USE ENTITY echo_lib.wiper_generator;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_5' of 'or1'
   mask_f <= wiper_mask OR ring_mask;

   -- Instance port mappings.
   U_2 : color_mixer
      PORT MAP (
         b_in_0 => ring_b,
         b_in_1 => wiper_b,
         g_in_0 => ring_g,
         g_in_1 => wiper_g,
         r_in_0 => ring_r,
         r_in_1 => wiper_r,
         sel    => wiper_mask,
         b_out  => vga_b,
         g_out  => vga_g,
         r_out  => vga_r
      );
   U_0 : ring_generator
      GENERIC MAP (
         minor_radius    => 44,
         major_radius    => 84,
         angle_amplitude => 270,
         center_angle    => 90,
         center_x        => 195,
         center_y        => 197
      )
      PORT MAP (
         h_count   => h_count,
         v_count   => v_count,
         ring_b    => ring_b,
         ring_g    => ring_g,
         ring_mask => ring_mask,
         ring_r    => ring_r
      );
   U_1 : wiper_generator
      PORT MAP (
         angle      => angle,
         c0         => c0,
         h_count    => h_count,
         v_count    => v_count,
         wiper_b    => wiper_b,
         wiper_g    => wiper_g,
         wiper_mask => wiper_mask,
         wiper_r    => wiper_r
      );

END struct;
