-- VHDL Entity echo_lib.wiper_rasterizer.interface
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-112.ad.liu.se)
--          at - 22:05:15 10/06/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY wiper_rasterizer IS
   PORT( 
      Ax         : IN     unsigned (10 DOWNTO 0);
      Ay         : IN     unsigned (9 DOWNTO 0);
      Bx         : IN     unsigned (10 DOWNTO 0);
      By         : IN     unsigned (9 DOWNTO 0);
      Cx         : IN     unsigned (10 DOWNTO 0);
      Cy         : IN     unsigned (9 DOWNTO 0);
      Dx         : IN     unsigned (10 DOWNTO 0);
      Dy         : IN     unsigned (9 DOWNTO 0);
      h_count    : IN     unsigned (10 DOWNTO 0);
      v_count    : IN     unsigned (9 DOWNTO 0);
      wiper_b    : OUT    std_logic_vector (7 DOWNTO 0);
      wiper_g    : OUT    std_logic_vector (7 DOWNTO 0);
      wiper_mask : OUT    std_logic;
      wiper_r    : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END wiper_rasterizer ;

--
-- VHDL Architecture echo_lib.wiper_rasterizer.struct
--
-- Created:
--          by - leoag319.student-liu.se (muxen2-112.ad.liu.se)
--          at - 13:38:29 10/09/25
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY echo_lib;

ARCHITECTURE struct OF wiper_rasterizer IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL area       : UNSIGNED(19 DOWNTO 0);
   SIGNAL area1      : UNSIGNED(19 DOWNTO 0);
   SIGNAL area2      : UNSIGNED(19 DOWNTO 0);
   SIGNAL area3      : UNSIGNED(19 DOWNTO 0);
   SIGNAL area4      : UNSIGNED(19 DOWNTO 0);
   SIGNAL area5      : UNSIGNED(19 DOWNTO 0);
   SIGNAL dout       : UNSIGNED(19 DOWNTO 0);
   SIGNAL dout1      : UNSIGNED(19 DOWNTO 0);
   SIGNAL dout4      : std_logic;
   SIGNAL dout5      : std_logic;
   SIGNAL dout6      : std_logic;
   SIGNAL dout7      : std_logic;
   SIGNAL point_area : UNSIGNED(19 DOWNTO 0);
   SIGNAL wiper_area : UNSIGNED(19 DOWNTO 0);


   -- Component Declarations
   COMPONENT TriangleAreaCalculator
   PORT (
      x1   : IN     UNSIGNED (10 DOWNTO 0);
      x2   : IN     UNSIGNED (10 DOWNTO 0);
      x3   : IN     UNSIGNED (10 DOWNTO 0);
      y1   : IN     UNSIGNED (9 DOWNTO 0);
      y2   : IN     UNSIGNED (9 DOWNTO 0);
      y3   : IN     UNSIGNED (9 DOWNTO 0);
      area : OUT    UNSIGNED (19 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT tolerance_comparator
   GENERIC (
      tolerance : INTEGER := 3
   );
   PORT (
      point_area : IN     UNSIGNED (19 DOWNTO 0);
      wiper_area : IN     UNSIGNED (19 DOWNTO 0);
      wiper_mask : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : TriangleAreaCalculator USE ENTITY echo_lib.TriangleAreaCalculator;
   FOR ALL : tolerance_comparator USE ENTITY echo_lib.tolerance_comparator;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_0' of 'add'
   u_0combo_proc: PROCESS (area1, area, dout6)
   VARIABLE temp_din0 : unsigned(20 DOWNTO 0);
   VARIABLE temp_din1 : unsigned(20 DOWNTO 0);
   VARIABLE temp_sum : unsigned(20 DOWNTO 0);
   VARIABLE temp_carry : unsigned(0 DOWNTO 0);
   BEGIN
      temp_din0 := '0' & area1;
      temp_din1 := '0' & area;
      temp_carry(0) := dout6;
      temp_sum := temp_din0 + temp_din1 + temp_carry;
      wiper_area <= resize(temp_sum(19 DOWNTO 0),20);
   END PROCESS u_0combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_1' of 'add'
   u_1combo_proc: PROCESS (area2, area3, dout7)
   VARIABLE temp_din0 : unsigned(20 DOWNTO 0);
   VARIABLE temp_din1 : unsigned(20 DOWNTO 0);
   VARIABLE temp_sum : unsigned(20 DOWNTO 0);
   VARIABLE temp_carry : unsigned(0 DOWNTO 0);
   BEGIN
      temp_din0 := '0' & area2;
      temp_din1 := '0' & area3;
      temp_carry(0) := dout7;
      temp_sum := temp_din0 + temp_din1 + temp_carry;
      dout1 <= resize(temp_sum(19 DOWNTO 0),20);
   END PROCESS u_1combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'add'
   u_2combo_proc: PROCESS (dout1, dout, dout4)
   VARIABLE temp_din0 : unsigned(20 DOWNTO 0);
   VARIABLE temp_din1 : unsigned(20 DOWNTO 0);
   VARIABLE temp_sum : unsigned(20 DOWNTO 0);
   VARIABLE temp_carry : unsigned(0 DOWNTO 0);
   BEGIN
      temp_din0 := '0' & dout1;
      temp_din1 := '0' & dout;
      temp_carry(0) := dout4;
      temp_sum := temp_din0 + temp_din1 + temp_carry;
      point_area <= resize(temp_sum(19 DOWNTO 0),20);
   END PROCESS u_2combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_3' of 'add'
   u_3combo_proc: PROCESS (area4, area5, dout5)
   VARIABLE temp_din0 : unsigned(20 DOWNTO 0);
   VARIABLE temp_din1 : unsigned(20 DOWNTO 0);
   VARIABLE temp_sum : unsigned(20 DOWNTO 0);
   VARIABLE temp_carry : unsigned(0 DOWNTO 0);
   BEGIN
      temp_din0 := '0' & area4;
      temp_din1 := '0' & area5;
      temp_carry(0) := dout5;
      temp_sum := temp_din0 + temp_din1 + temp_carry;
      dout <= resize(temp_sum(19 DOWNTO 0),20);
   END PROCESS u_3combo_proc;

   -- ModuleWare code(v1.12) for instance 'b_channel' of 'constval'
   wiper_b <= "00010101";

   -- ModuleWare code(v1.12) for instance 'g_channel' of 'constval'
   wiper_g <= "11010110";

   -- ModuleWare code(v1.12) for instance 'r_channel' of 'constval'
   wiper_r <= "11001110";

   -- ModuleWare code(v1.12) for instance 'U_5' of 'gnd'
   dout4 <= '0';

   -- ModuleWare code(v1.12) for instance 'U_6' of 'gnd'
   dout5 <= '0';

   -- ModuleWare code(v1.12) for instance 'U_7' of 'gnd'
   dout7 <= '0';

   -- ModuleWare code(v1.12) for instance 'U_8' of 'gnd'
   dout6 <= '0';

   -- Instance port mappings.
   ABC : TriangleAreaCalculator
      PORT MAP (
         x1   => Cx,
         y1   => Cy,
         x2   => Ax,
         y2   => Ay,
         x3   => Bx,
         y3   => By,
         area => area1
      );
   DBC : TriangleAreaCalculator
      PORT MAP (
         x1   => Dx,
         y1   => Dy,
         x2   => Cx,
         y2   => Cy,
         x3   => Bx,
         y3   => By,
         area => area
      );
   PAB : TriangleAreaCalculator
      PORT MAP (
         x1   => h_count,
         y1   => v_count,
         x2   => Ax,
         y2   => Ay,
         x3   => Bx,
         y3   => By,
         area => area2
      );
   PAD : TriangleAreaCalculator
      PORT MAP (
         x1   => h_count,
         y1   => v_count,
         x2   => Ax,
         y2   => Ay,
         x3   => Dx,
         y3   => Dy,
         area => area5
      );
   PCB : TriangleAreaCalculator
      PORT MAP (
         x1   => h_count,
         y1   => v_count,
         x2   => Cx,
         y2   => Cy,
         x3   => Bx,
         y3   => By,
         area => area3
      );
   PCD : TriangleAreaCalculator
      PORT MAP (
         x1   => h_count,
         y1   => v_count,
         x2   => Cx,
         y2   => Cy,
         x3   => Dx,
         y3   => Dy,
         area => area4
      );
   U_4 : tolerance_comparator
      GENERIC MAP (
         tolerance => 3
      )
      PORT MAP (
         point_area => point_area,
         wiper_area => wiper_area,
         wiper_mask => wiper_mask
      );

END struct;
